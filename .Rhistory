dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cname, '|', fixed = TRUE)
cnames <- strsplit(cnames, '|', fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 pm1$Sample.Value
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative,rm.na = TRUE)
mean(negative,na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.dates(dates, "%Y%m%d%")
dates <- as.date(dates, "%Y%m%d%")
dates <- as.character(dates, "%Y%m%d%")
dates <- as.date(as.character(dates, "%Y%m%d%"))
dates <- as.Date(as.character(dates, "%Y%m%d%"))
dates <- as.Date(as.character(dates, "%Y%m%d"))
dates <- as.Date(as.character(dates), "%Y%m%d"))
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(negative,"month")
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & County.Site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.Site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County_code == 63 and Site.ID == 2008)
pm0sub <- subset(cnt0, County_code == 63 & Site.ID == 2008)
pm0sub <- subset(cnt0, County.code == 63 & Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar= c(4,4,2,1))
plot(dates0,x0sub, pch = 20)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(lwd = 2, median(x0sub, na.rm = TRUE))
?abline
abline(median(x0sub, na.rm = TRUE))
abline()
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1,x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0,tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(do, d1, by = "state")
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3])
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
source('C:/Users/Stefan/Desktop/Data/4.Exploratory_Data_Analysis/Lesson4/Course_Project/plot1.R')
source('C:/Users/Stefan/Desktop/Data/Startup.R')
source('C:/Users/Stefan/Desktop/Data/4.Exploratory_Data_Analysis/Lesson4/Course_Project/plot1.R')
source('C:/Users/Stefan/Desktop/Data/4.Exploratory_Data_Analysis/Lesson4/Course_Project/plot2.R')
source('C:/Users/Stefan/Desktop/Data/4.Exploratory_Data_Analysis/Lesson4/Course_Project/plot3.R')
## Create plot
## Create plot
Balt_type <- NEI %>% filter(fips =="24510") %>% group_by(year, type) %>%
summarise(total_emissions = sum(Emissions))
qplot(year, total_emissions, data = Balt_type, facets = .~type, xlab = "Year", ylab = "Total Emissions",
main = "Total Emissions in Baltimore by type")
light_SCC <- select(SCC,SCC:SCC.Level.Four)
NEI <- left_join(NEI,light_SCC, by = "SCC")
str(NEI)
str(SCC_light)
str(light_SCC)
View(NEI)
head(NEI)
View(NEI)
combcoal <- grepl("[Cc]ombustion", NEI$SCC.Level.One) & grepl("[Cc]oal", NEI$SCC.Level.Four)
head(combcoal)
test <- NEI[combcoal,]
View(test)
comb.coal <- NEI[combcoal,]
sum.comb.coal <- comb.coal %>% group_by(year) %>% summarise(Emissions)
sum.comb.coal <- comb.coal %>% group_by(year) %>% summarise(total_emissions = sum(Emissions))
View(sum.comb.coal)
sum.comb.coal %>% qplot(year,total_emissions)
qplot(year,total_emissions, data= sum.comb.coal)
qplot(year,total_emissions, data= sum.comb.coal, xlab= "Year", ylab = "Total emissions", main = "Coal combustion-related emissions across the United States")
View(SCC)
unique(SCC, SCC$SCC.Level.One)
unique(SCC, SCC$SCC.Level.One)
?unique
unique(SCC, SCC.Level.One)
unique(SCC$SCC.Level.One)
unique(SCC$SCC.Level.Two)
unique(SCC$SCC.Level.Three)
unique(SCC$SCC.Level.Two[SCC$SCC.Level.One == )
unique(SCC$SCC.Level.One)
unique(SCC$SCC.Level.Two[SCC$SCC.Level.One == "Mobile Sources")
mobile <- SCC$SCC.Level.One == "Mobile Sources"
unique(SCC$SCC.Level.Two[SCC$SCC.Level.One == "Mobile Sources"])
unique(SCC$SCC.Level.Four[SCC$SCC.Level.One == "Mobile Sources"])
unique(SCC$SCC.Level.Three[SCC$SCC.Level.One == "Mobile Sources"])
unique(SCC$SCC.Level.Two[SCC$SCC.Level.One == "Mobile Sources"])
grepl("[Vv]ehicle", SCC$SCC.Level.Two)
vehicle <- grepl("[Vv]ehicle", SCC$SCC.Level.Two)
SCC.vehicle <- SCC[vehicle]
SCC.vehicle <- SCC[vehicle,]
unique(SCC.vehicle$SCC.Level.One)
vehicle <- grepl("[Vv]ehicle", NEI$SCC.Level.Two)
NEI.vehicle <- NEI[vehicle,]
Balt.vehicle <- NEI.vehicle %>% filter(fips =="24510") %>% group_by(year) %>%
summarise(total_emissions = sum(Emissions))
View(Balt.vehicle)
qplot(year, total_emissions, data= NEI.vehicle, xlab = "Year", ylab = "Total emissions",)
qplot(year, total_emissions, data= NEI.vehicle, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore")
qplot(year, total_emissions, data= NEI.vehicle, xlab = "Year", ylab = "Total emissions",)
qplot(year, total_emissions, data= NEI.vehicle, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore")
qplot(year, total_emissions, data= Balt.vehicle, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore")
vehicle <- grep("[Vv]ehicle", SCC$SCC.Level.Two, value = TRUE)
vehicle
Balt.LA.vehicle <- NEI.vehicle %>% filter(fips =="24510" & fips =="06037") %>% group_by(year, fips) %>%
summarise(total_emissions = sum(Emissions))
qplot(year, total_emissions, data= Balt.LA.vehicle, facets= ~.fips, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore")
View(Balt.LA.vehicle)
Balt.LA.vehicle <- NEI.vehicle %>% filter(fips =="24510" | fips =="06037") %>% group_by(year, fips) %>%
summarise(total_emissions = sum(Emissions))
qplot(year, total_emissions, data= Balt.LA.vehicle, facets= ~.fips, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore")
View(Balt.LA.vehicle)
Balt.LA.vehicle <- NEI.vehicle %>% filter(fips =="24510" | fips =="06037") %>% group_by(fips, year) %>%
summarise(total_emissions = sum(Emissions))
qplot(year, total_emissions, data= Balt.LA.vehicle, facets= ~.fips, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore")
qplot(year, total_emissions, data= Balt.LA.vehicle, facets= .~fips, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore")
?transform
?transmute
Balt.LA.vehicle$city <- factor(Balt.LA.vehicle$fips)
View(Balt.LA.vehicle)
levels(Balt.LA.vehicle$city) <- list(Los Angeles = "06037")
levels(Balt.LA.vehicle$city) <- list("Los Angeles" = "06037", "Baltimore" = "24510")
View(Balt.LA.vehicle)
Balt.LA.vehicle <- NEI.vehicle %>% filter(fips =="24510" | fips =="06037") %>% group_by(year, fips) %>%
summarise(total_emissions = sum(Emissions))
Balt.LA.vehicle$city <- factor(Balt.LA.vehicle$fips)
levels(Balt.LA.vehicle$city) <- list("Los Angeles" = "06037",
"Baltimore" = "24510")
qplot(year, total_emissions, data= Balt.LA.vehicle, facets= .~fips, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore and LA")
qplot(year, total_emissions, data= Balt.LA.vehicle, facets= .~city, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore and LA")
## Initial datasteps
### Set up working directory
setwd("C:/Users/Stefan/Desktop/Data/4.Exploratory_Data_Analysis/Lesson4/Course_Project")
### Download file
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
filename <- "exdata_data_NEI_data.zip"
dataname <- "summarySCC_PM25.rds"
### Checking whether the file already exists. If not, the file is downloaded
if (!file.exists(filename)) {
download.file(url,filename)
}
### Checking whether the file has been unzipped. Otherwise, the zip file is unzipped.
if (!file.exists(dataname)){
unzip(filename)
}
### Read data into R
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
### Change type to factor variable
NEI$type <- as.factor(NEI$type)
## Create plot
### Create data frame for each year
NEI_year <- split(NEI,NEI$year)
### Summarise emissions by year
emi_year <- NEI %>% group_by(year) %>% summarise(total_emissions = sum(Emissions))
### Create plot
with(emi_year, plot(year,total_emissions, pch = 19, col = "black", xlab = "Year", ylab = "Total emissions",
main = "Total emissions"))
### Save plot
dev.copy(png, file= "plot1.png")
dev.off()
dev.copy(png, file= "plot1.png")
dev.off()
## Create plot
### Summarise emissions by year for Baltimore
Balt_year <- NEI %>% filter(fips =="24510") %>% group_by(year) %>%
summarise(total_emissions = sum(Emissions))
with(Balt_year, plot(year,total_emissions, pch = 19, col = "black", xlab = "Year", ylab = "Total emissions",
main = "Total emissions in Baltimore"))
dev.copy(png, file= "plot2.png")
dev.off()
## Create plot
### Summarise emissions by year and type for Baltimore
Balt_type <- NEI %>% filter(fips =="24510") %>% group_by(year, type) %>%
summarise(total_emissions = sum(Emissions))
### Create plot with ggplot2 (qplot in this case)
qplot(year, total_emissions, data = Balt_type, facets = .~type, xlab = "Year", ylab = "Total Emissions",
main = "Total Emissions in Baltimore by type")
### Save plot as png format
dev.copy(png, file= "plot3.png")
dev.off()
### Create a lighter version of SCC for efficiency reasons
light_SCC <- select(SCC,SCC:SCC.Level.Four)
### Merge NEI with SCC
NEI <- left_join(NEI,light_SCC, by = "SCC")
### Find the emissions related to Coal combustion
combcoal <- grepl("[Cc]ombustion", NEI$SCC.Level.One) & grepl("[Cc]oal", NEI$SCC.Level.Four)
comb.coal <- NEI[combcoal,]
### Summarise by year
sum.comb.coal <- comb.coal %>% group_by(year) %>% summarise(total_emissions = sum(Emissions))
### Create plot
qplot(year,total_emissions, data= sum.comb.coal, xlab= "Year", ylab = "Total emissions",
main = "Coal combustion-related emissions across the United States")
### Save plot as png format
dev.copy(png, file= "plot4.png")
dev.off()
### Find the emissions related to motor vehicles
vehicle <- grepl("[Vv]ehicle", NEI$SCC.Level.Two)
NEI.vehicle <- NEI[vehicle,]
### Summarise by year for Baltimore
Balt.vehicle <- NEI.vehicle %>% filter(fips =="24510") %>% group_by(year) %>%
summarise(total_emissions = sum(Emissions))
### Create plot
qplot(year, total_emissions, data= Balt.vehicle, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore")
### Save plot as png format
dev.copy(png, file= "plot5.png")
dev.off()
### Summarise by fips and year for Baltimore and LA
Balt.LA.vehicle <- NEI.vehicle %>% filter(fips =="24510" | fips =="06037") %>% group_by(year, fips) %>%
summarise(total_emissions = sum(Emissions))
### Changing character var. fips to factor var. city
Balt.LA.vehicle$city <- factor(Balt.LA.vehicle$fips)
levels(Balt.LA.vehicle$city) <- list("Los Angeles" = "06037",
"Baltimore" = "24510")
### Create plot
qplot(year, total_emissions, data= Balt.LA.vehicle, facets= .~city, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore and LA")
### Save plot as png format
dev.copy(png, file= "plot6.png")
dev.off()
?dev.copy
with(emi_year, plot(year,total_emissions, pch = 19, col = "black", xlab = "Year", ylab = "Total emissions",
main = "Total emissions"))
dev.copy(png, file= "test.png", height = 600, width = 600)
dev.off
dev.off()
dev.copy(png, file= "test.png", height = 900, width = 900)
dev.off()
dev.copy(png, file= "test.png", height = 900, width = 1200)
dev.off()
dev.copy(png, file= "test.png", height = 800, width = 1200)
dev.off()
### Create plot
with(emi_year, plot(year,total_emissions, pch = 19, col = "black", xlab = "Year", ylab = "Total emissions",
main = "Total emissions"))
### Save plot as png format
dev.copy(png, file= "plot1.png", height = 800, width = 1200)
dev.off()
### Create plot with base.graph
with(Balt_year, plot(year,total_emissions, pch = 19, col = "black", xlab = "Year", ylab = "Total emissions",
main = "Total emissions in Baltimore"))
### Save plot as png format
dev.copy(png, file= "plot2.png", height = 800, width = 1200)
dev.off()
qplot(year, total_emissions, data = Balt_type, facets = .~type, xlab = "Year", ylab = "Total Emissions",
main = "Total Emissions in Baltimore by type")
### Save plot as png format
dev.copy(png, file= "plot3.png", height = 800, width = 1200)
dev.off()
qplot(year,total_emissions, data= sum.comb.coal, xlab= "Year", ylab = "Total emissions",
main = "Coal combustion-related emissions across the United States")
### Save plot as png format
dev.copy(png, file= "plot4.png", height = 800, width = 1200)
dev.off()
qplot(year, total_emissions, data= Balt.vehicle, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore")
### Save plot as png format
dev.copy(png, file= "plot5.png", height = 800, width = 1200)
dev.off()
qplot(year, total_emissions, data= Balt.LA.vehicle, facets= .~city, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore and LA")
### Save plot as png format
dev.copy(png, file= "plot6.png", height = 800, width = 1200)
dev.off()
with(emi_year, plot(year,total_emissions, pch = 19, col = "black", xlab = "Year", ylab = "Total emissions",
main = "Total emissions"))
abline(fit, lwd = 2)
fit <- lm(total_emissions - year)
fit <- lm(emi_year$total_emissions - emi_year$year)
?lm
fit <- lm(emi_year$total_emissions ~ emi_year$year)
with(emi_year, plot(year,total_emissions, pch = 19, col = "black", xlab = "Year", ylab = "Total emissions",
main = "Total emissions"))
fit <- lm(emi_year$total_emissions ~ emi_year$year)
abline(fit)
with(Balt_year, plot(year,total_emissions, pch = 19, col = "black", xlab = "Year", ylab = "Total emissions",
main = "Total emissions in Baltimore"))
fit.balt <- with(Balt_year, lm(total_emissions, year))
fit.balt <- with(Balt_year, lm(total_emissions ~ year))
abline(fit.balt)
qplot(year, total_emissions, data = Balt_type, facets = .~type, xlab = "Year", ylab = "Total Emissions",
main = "Total Emissions in Baltimore by type")
qplot(year, total_emissions, data = Balt_type, facets = .~type, xlab = "Year", ylab = "Total Emissions",
main = "Total Emissions in Baltimore by type") + geom_smooth(method = "lm")
### Create plot
with(emi_year, plot(year,total_emissions, pch = 19, col = "black", xlab = "Year", ylab = "Total emissions",
main = "Total emissions"))
### Fit a trendline through the points
fit <- lm(emi_year$total_emissions ~ emi_year$year)
abline(fit)
### Save plot as png format
dev.copy(png, file= "plot1.png", height = 800, width = 1200)
dev.off()
### Create plot with base.graph
with(Balt_year, plot(year,total_emissions, pch = 19, col = "black", xlab = "Year", ylab = "Total emissions",
main = "Total emissions in Baltimore"))
### Fit a trendline through the points
fit.balt <- with(Balt_year, lm(total_emissions ~ year))
abline(fit.balt)
### Save plot as png format
dev.copy(png, file= "plot2.png", height = 800, width = 1200)
dev.off()
### Create plot with ggplot2 (qplot in this case)
qplot(year, total_emissions, data = Balt_type, facets = .~type, xlab = "Year", ylab = "Total Emissions",
main = "Total Emissions in Baltimore by type") + geom_smooth(method = "lm")
### Save plot as png format
dev.copy(png, file= "plot3.png", height = 800, width = 1200)
dev.off()
### Create plot
qplot(year,total_emissions, data= sum.comb.coal, xlab= "Year", ylab = "Total emissions",
main = "Coal combustion-related emissions across the United States") + geom_smooth(method = "lm")
### Save plot as png format
dev.copy(png, file= "plot4.png", height = 800, width = 1200)
dev.off()
### Create plot
qplot(year, total_emissions, data= Balt.vehicle, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore") + geom_smooth(method = "lm")
### Save plot as png format
dev.copy(png, file= "plot5.png", height = 800, width = 1200)
dev.off()
### Create plot
qplot(year, total_emissions, data= Balt.LA.vehicle, facets= .~city, xlab = "Year", ylab = "Total emissions",
main = "Total emissions from motor vehicles in Baltimore and LA") + geom_smooth(method = "lm")
### Save plot as png format
dev.copy(png, file= "plot6.png", height = 800, width = 1200)
dev.off()
library(knitr)
library(markdown)
install("markdown")
install.packages("markdown")
install.packages("rmarkdown")
?ggsave
setwd("C:/Users/Stefan/Desktop/Data/5.Reproducible_research/Lesson2/CourseProject1/RepData_PeerAssessment1")
activity <- read.csv(dataname)
dataname <- "activity.csv"
activity <- read.csv(dataname)
View(activity)
View(activity)
sum.act.day <- activity %>% group_by(date) %>% summarise(total_steps = sum(steps, na.rm = TRUE))
library(dplyr)
sum.act.day <- activity %>% group_by(date) %>% summarise(total_steps = sum(steps, na.rm = TRUE))
View(sum.act.day)
distinct(activity$steps[date == '2012-10-02'])
str(activity)
distinct(activity$steps[date = '2012-10-02'])
distinct(activity$steps[date = '2012-10-02'],)
distinct(activity$steps[date == '2012-10-02'],)
distinct(activity$steps[activity$date == '2012-10-02'],)
unique(activity$steps[activity$date == '2012-10-02'],)
gsteps <- gplot(data= sum.act.day, aes(y = total_steps, x = date )) + geom_histogram
gsteps <- ggplot(data= sum.act.day, aes(y = total_steps, x = date )) + geom_histogram
library(ggplot2)
gsteps <- ggplot(data= sum.act.day, aes(y = total_steps, x = date )) + geom_histogram
gsteps <- ggplot(data= sum.act.day, aes(y = total_steps, x = date )) + geom_histogram()
gsteps
gsteps <- ggplot(data= sum.act.day, aes(x = total_steps)) + geom_histogram()
gsteps
sum(sum.act.day$total_steps)
mean(sum.act.day$total_steps)
median(sum.act.day$total_steps)
sum.act.5min <- activity %>% group_by(interval) %>% summarise(total_steps = sum(steps, na.rm = TRUE))
View(sum.act.5min)
View(sum.act.5min)
ginterval <- ggplot(data = sum.act.5min, aes(y = total_steps, x = interval)) + geom_point()
ginterval
ginterval <- ggplot(data = sum.act.5min, aes(y = total_steps, x = interval)) + geom_line()
ginterval
ginterval <- ggplot(data = sum.act.5min, aes(y = total_steps, x = interval)) + geom_density()
ginterval
ginterval <- ggplot(data = sum.act.5min, aes(y = total_steps, x = interval)) + geom_line()
ginterval
with(sum.act.5min, max(total_steps))
sum.act.5min[total_steps == max(sum.act.5min$total_steps),]
maxsteps <- with(sum.act.5min, max(total_steps))
sum.act.5min[total_steps == maxsteps]
sum.act.5min[sum.act.5min$total_steps == maxsteps]
filter(sum.act.5min, total_steps = max(total_steps))
filter(sum.act.5min, total_steps == max(total_steps))
sum.act.5min %>% select(interval) %>% filter(total_steps == max(total_steps))
sum.act.5min %>% filter(total_steps == max(total_steps)) %>% select(interval)
sum(is.na(activity$steps))
count(is.na(activity$steps))
count(activity$steps)
?n
n(activity$steps)
nrow(activity)
View(sum.act.day)
gsteps <- ggplot(data= sum.act.day, aes(x = total_steps)) + geom_histogram(color = "blue")
gsteps
gsteps <- ggplot(data= sum.act.day, aes(x = total_steps)) + geom_histogram(fill = "blue")
gsteps
gsteps <- ggplot(data= sum.act.day, aes(x = total_steps)) + geom_histogram(fill = "green")
gsteps
gsteps <- ggplot(data= sum.act.day, aes(x = total_steps)) + geom_histogram(fill = "gray")
gsteps
gsteps <- ggplot(data= sum.act.day, aes(x = total_steps)) + geom_histogram(fill = "purple")
gsteps
gsteps <- ggplot(data= sum.act.day, aes(x = total_steps)) + geom_histogram()
gsteps
median.act.5min <- activity %>% group_by(interval) %>% summarise(median_steps = median(steps, na.rm = TRUE))
View(median.act.5min)
?median
View(median.act.5min)
mean.act.5min <- activity %>% group_by(interval) %>% summarise(mean_steps = mean(steps, na.rm = TRUE))
View(mean.act.5min)
mean.act.5min <- activity %>% group_by(interval) %>% summarise(mean_steps = round(mean(steps, na.rm = TRUE)))
View(mean.act.5min)
View(activity)
activityNA <- left_join(activity, mean.act.5min, by = "interval")
View(activityNA)
activity2 <- left_join(activity, mean.act.5min, by = "interval")
activity2$steps[is.na(activity2$steps)] <- activity2$mean_steps
View(activity2)
select(activity2, 1:3)
?weekdays
weekday(activity2$date[1])
weekdays(activity2$date[1])
test <- as.character(as.date(activity2$date, '%Y%m%d')
test <- as.character(as.date(activity2$date, '%Y%m%d'))
test <- as.character(as.Date(activity2$date, '%Y%m%d'))
test
head(test)
test <- as.character(as.Date(activity2$date, '%Y%m%d%'))
head(test)
test <- as.character(as.Date(activity2$date, 'Y%m%d%'))
head(test)
test <- as.character(as.Date(activity2$date, '%Y%m%d'))
head(test)
str(activity2)
test <- as.character(as.Date(activity2$date, "%Y%m%d"))
head(test)
test <- as.date(as.character(activity2$date), "%Y%m%d")
test <- as.Date(as.character(activity2$date), "%Y%m%d")
head(test)
test <- as.character(activity2$date)
head(test)
?as.Date
test <- as.Date(as.character(activity2$date), "%Y-%m-%d")
head(test)
activity2$date <- as.Date(as.character(activity2$date), "%Y-%m-%d")
activity2$weekday <- weekdays(activity2$date)
head(activity2)
activity2$weekday <- weekdays(activity2$date)
?as.factor
activity2$weekend <- factor(activity2$weekdays)
View(activity2)
activity2$weekend <- factor(activity2$weekday)
?levels
levels(activity2$weekend) <- list(c("Monday","Tuesday","Wednesday","Thursday","Friday") = "Weekday", c("Saturday","Sunday") = "Weekend")
levels(activity2$weekend) <- list("Weekday" = c("Monday","Tuesday","Wednesday","Thursday","Friday"), "Weekend" = c("Saturday","Sunday"))
head(activity2)
mean.act.week <- activity2 %>% group_by(weekend, interval) %>% summarise(mean_steps = mean(steps, na.rm = TRUE))
head(mean.act.week)
mean.act2.week <- activity2 %>% group_by(weekend, interval) %>% summarise(mean_steps = mean(steps, na.rm = TRUE))
gweek <- ggplot(data = mean.act2.week, aes(y = mean_steps, x = interval)) + facet_grid(.~weekend) + geom_line()
gweek
gweek <- ggplot(data = mean.act2.week, aes(y = mean_steps, x = interval)) + facet_grid(.~weekend) + scale_y_continuous(name="Average number of steps") + geom_line() + ggtitle("Average number of steps across all intervals by Weekday/Weekend")
gweek
